---
  - name: Install unzip
    apt:
      name: unzip
      update_cache: yes
    become: true

  - name: Add sudoers file
    copy:
      src: vault
      dest: /etc/sudoers.d/vault
      owner: root
      group: root
      mode: 0644

  - name: Create Group
    group:
      name: "{{ vault_group }}"
      system: yes
      state: present
    when: vault_group != "root"
    become: true

  - name: Create User
    user:
      name: "{{ vault_user }}"
      group: "{{ vault_group }}"
      system: yes
      state: present
    when: vault_user != "root"
    become: true

  - name: Create vault config directory
    file: state=directory path={{ vault_dir }}
    become: true

  - name: Read bootstrapped state
    stat:
      path: "{{ vault_dir }}/.installed"
    register: install_state
    ignore_errors: true


  - name: download and install vault binary
    unarchive:
      src: "https://releases.hashicorp.com/vault/{{ vault_version }}/vault_{{ vault_version }}_linux_amd64.zip"
      dest: /usr/bin/
      remote_src: True
    become: true
    when: not install_state.stat.exists

  - name: Create bootstrapped state
    file:
      state: touch
      dest: "{{ vault_dir }}/.install_state"

  - import_tasks: tls.yml
    when: vault_tls | bool

  - name: Generate vault config
    template:
      src: vault.hcl.j2
      dest: "{{ vault_dir }}/vault.hcl"
    become: true

  - name: Generate Vault systemd script
    template:
      src: vault_systemd.service.j2
      dest: /etc/systemd/system/vault.service
    become: true

  - name: Generate unseal script
    template:
      src: unseal.sh.j2
      dest: "{{ vault_dir }}/unseal.sh"
      mode: 0755
    become: true
    when: vault_unseal_script


  - name: Start vault service
    systemd:
      state: started
      name: vault
      daemon_reload: yes
    become: true
    register: vault_started

  - name: Wait for vault to start
    pause:
      seconds: 15
    when: vault_started|changed

  - name: Check if vault is initialized
    command: bash -c "curl {{ vault_url }}/v1/sys/init 2>/dev/null | jq '.initialized'"
    register: is_init

  - name: Initialize the vault
    command: vault init
    register: keys
    environment:
      VAULT_ADDR: "{{ vault_url }}"
    when: is_init.stdout == 'false'


  - debug: msg="{{keys}}"
