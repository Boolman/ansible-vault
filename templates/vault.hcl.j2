max_lease_ttl = "{{ vault_lease_ttl }}"
default_lease_ttl = "{{ vault_lease_ttl }}"
cluster_name = "{{ vault_cluster_name }}"
disable_mlock = "{{ vault_disable_mlock }}"

{% if vault_tls -%}
{% set proto = 'https' -%}
{% else -%}
{% set proto = 'http' -%}
{% endif -%}

api_addr = "{{ proto }}://{{ ansible_all_ipv4_addresses[0] }}:{{ vault_port }}"
cluster_addr = "{{ proto }}://{{ ansible_all_ipv4_addresses[0] }}:{{ vault_cluster_port }}"

listener "tcp" {
  address = "{{ ansible_all_ipv4_addresses[0] }}:{{ vault_port }}"
  {% if vault_tls -%}
  tls_disable = false
  tls_cert_file = "{{ vault_tls_cert_file }}"
  tls_key_file  = "{{ vault_tls_key_file }}"
  tls_client_ca_file = "{{ vault_tls_ca_file }}"
  {% else -%}
  tls_disable = true
  {% endif -%}
}

listener "tcp" {
  address = "127.0.0.1:8200"
  tls_disable = true
}

{% if vault_backend == "consul" %}
storage "consul" {
  address = "{{ vault_consul_address }}"
  path = "{{ vault_consul_path }}"
  scheme = "{{ vault_consul_scheme }}"
  {% if vault_consul_acl -%}
  token = "{{ vault_consul_token }}"
  {% endif -%}
  {% if vault_consul_scheme == "https" %}
  tls_ca_file   = "/etc/ssl/int_units_cloud.pem"
  tls_cert_file = "/etc/ssl/{{ ansible_fqdn }}.crt"
  tls_key_file  = "/etc/ssl/{{ ansible_fqdn }}.key"
  tls_skip_verify = "true"
  {% endif %}

}
{% endif %}
